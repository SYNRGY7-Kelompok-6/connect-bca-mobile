name: Build, Test, & Deploy on Workflow Dispatch

on:
  push:
    branches:
      - cicd-test
  pull_request:
    branches:
      - cicd-test
  workflow_dispatch:

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Ensure bump-version.sh is executable
        run: chmod +x ./bump-version.sh

      - name: Decode Google Services JSON
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $GOOGLE_SERVICES_JSON > app/google-services.json

      - name: Increment Version Name
        run: ./bump-version.sh

      - name: Get version name
        id: get_version
        run: |
          version_name=$(grep "versionName =" app/build.gradle.kts | awk '{ print $3 }' | tr -d '"')
          echo "version_name=$version_name" >> $GITHUB_OUTPUT

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Clean and Build Release APK
        run: |
          ./gradlew clean assembleRelease --stacktrace
          mkdir -p results/release
          cp app/build/outputs/apk/release/app-release.apk results/release/
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Upload Crashlytics Mapping File
        run: ./gradlew :app:uploadCrashlyticsMappingFileRelease
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Check build output
        run: ls -R results

      - name: Verify APK file
        run: |
          if [ -f results/release/app-release.apk ]; then
            echo "APK file exists"
          else
            echo "APK file does not exist"
            exit 1
          fi

      - name: Upload and Distribute App to Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: tester
          file: results/release/app-release.apk
          releaseNotes: |
            Changes in this build:
            - ${{ github.event.head_commit.message }}
          versionName: ${{ steps.get_version.outputs.version_name }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version_name }}
          release_name: Release ${{ steps.get_version.outputs.version_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./results/release/app-release.apk
          asset_name: app-release-${{ steps.get_version.outputs.version_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: results/release/app-release.apk

      - name: Copy Test Results
        if: always()
        run: |
          mkdir -p ./results/test-results
          cp -R app/build/test-results/* results/test-results/

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: ./results/test-results

      - name: Copy Build Outputs
        if: failure()
        run: |
          mkdir -p ./results/outputs
          cp -R app/build/outputs/* results/outputs/

      - name: Upload build outputs
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: build-outputs
          path: ./results/outputs